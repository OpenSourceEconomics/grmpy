name: Continuous Integration Workflow
on:
  push:
    # branches:
    # - main
  pull_request:
    branches:
    - '*'

env:
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:

  run-tests:

    name: Run tests for ${{ matrix.os }} on ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        os: ['windows-latest']
        python-version: ['3.7', '3.8']

    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

      - name: Install core dependencies.
        shell: bash -l {0}
        run: conda install -c conda-forge tox-conda

      ##############################
      # tox-conda fixes on Windows #
      ##############################

      - name: Install fixes for Python 3+ on Windows
        if: runner.os == 'Windows'
        shell: bash -l {0}
        run: conda install -c conda-forge llvmlite>=0.35.0    # pip install llvmlite>=0.35.0 --ignore-installed

      - name: Run pytest 
        shell: bash -l {0}
        run: tox -e pytest

  pre-commit:

    name: Run pre-commit.
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: pip install tox

      - name: Run pre-commit
        run: tox -e pre-commit
  
  docs:

    name: Run documentation.
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.8

      - name: Install core dependencies.
        shell: bash -l {0}
        run: conda install -c conda-forge tox-conda

      - name: Build docs
        shell: bash -l {0}
        run: tox -e sphinx
